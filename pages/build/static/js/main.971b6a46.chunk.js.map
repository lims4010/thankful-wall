{"version":3,"sources":["actions/alert.js","actions/types.js","utils/setAuthToken.js","actions/auth.js","components/layout/Navbar.js","components/auth/Login.js","components/layout/Alert.js","components/layout/Spinner.js","components/posts/PostItem.js","actions/post.js","components/posts/PostForm.js","components/posts/Wall.js","reducers/alert.js","reducers/auth.js","reducers/wall.js","reducers/index.js","store.js","App.js","index.js"],"names":["setAlert","msg","alertType","timeout","dispatch","id","uuid","v4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","async","localStorage","get","res","data","connect","state","auth","logout","isAuthenticated","loading","authLinks","onClick","href","className","guestLinks","to","login","email","password","config","body","JSON","stringify","post","err","response","errors","forEach","error","useState","formData","setFormData","onChange","e","target","name","value","onSubmit","preventDefault","placeholder","required","minLength","alerts","alert","length","map","key","PostItem","addLike","removeLike","deletePost","_id","text","likes","date","showActions","class","format","defaultProps","postId","put","status","delete","addPost","postData","setText","cols","rows","wall","getPosts","posts","useEffect","Spinner","intialState","getItem","user","combineReducers","action","filter","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","applyMiddleware","App","exact","path","component","Wall","Login","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.971b6a46.chunk.js","sourcesContent":["import uuid from 'uuid';\r\nimport { SET_ALERT, REMOVE_ALERT } from './types';\r\n\r\nexport const setAlert = (msg, alertType, timeout = 5000) => dispatch => {\r\n  const id = uuid.v4();\r\n  dispatch({\r\n    type: SET_ALERT,\r\n    payload: { msg, alertType, id }\r\n  });\r\n\r\n  setTimeout(\r\n    () =>\r\n      dispatch({\r\n        type: REMOVE_ALERT,\r\n        payload: id\r\n      }),\r\n    timeout\r\n  );\r\n};\r\n","export const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED';\r\nexport const GET_POSTS = 'GET_POSTS';\r\nexport const POST_ERROR = 'POST_ERROR';\r\nexport const UPDATE_LIKES = 'UPDATE_LIKES';\r\nexport const DELETE_POST = 'DELETE_POST';\r\nexport const ADD_POST = 'ADD_POST';\r\n","import axios from 'axios';\r\n\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common['x-auth-token'] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common['x-auth-token'];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT\r\n} from './types';\r\nimport setAuthToken from '../utils/setAuthToken';\r\n\r\n// Load User\r\nexport const loadUser = () => async dispatch => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n  try {\r\n    const res = await axios.get('/api/auth');\r\n\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: AUTH_ERROR\r\n    });\r\n  }\r\n};\r\n\r\n// Login User\r\nexport const login = (email, password) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await axios.post('/api/auth', body, config);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data\r\n    });\r\n    dispatch(loadUser());\r\n  } catch (error) {\r\n    const err = error.response.data.errors;\r\n    if (err) {\r\n      err.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    dispatch({\r\n      type: LOGIN_FAIL\r\n    });\r\n  }\r\n};\r\n\r\n// Logout / Clear Profile\r\n\r\nexport const logout = () => dispatch => {\r\n  dispatch({ type: LOGOUT });\r\n};\r\n","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { logout } from '../../actions/auth';\r\n\r\nexport const Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\r\n  const authLinks = (\r\n    <ul>\r\n      <li>\r\n        <a onClick={logout} href=\"#!\">\r\n          <i className=\"fas fa-sign-out-alt\"></i>{' '}\r\n          <span className=\"hide-sm\">Logout</span>\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  );\r\n  const guestLinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to=\"/login\">Admin Login</Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n  return (\r\n    <nav className=\"navbar bg-dark\">\r\n      <h1>\r\n        <Link to=\"/\">\r\n          <i className=\"fas fa-signature\"></i> Thankful Wall\r\n        </Link>\r\n      </h1>\r\n      {/* !loading && ... is ternary conditional syntax when else = null */}\r\n      {!loading && (\r\n        <Fragment>{isAuthenticated ? authLinks : guestLinks} </Fragment>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { login } from '../../actions/auth';\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  const { email, password } = formData;\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    login(email, password);\r\n  };\r\n  // Redirect if logged in\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Sign In</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i> Sign into Your Account\r\n      </p>\r\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email Address\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            minLength=\"6\"\r\n            value={password}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Alert = ({ alerts }) =>\r\n  alerts !== null &&\r\n  alerts.length > 0 &&\r\n  alerts.map(alert => (\r\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\r\n      {alert.msg}\r\n    </div>\r\n  ));\r\n\r\nAlert.propTypes = {\r\n  alerts: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  alerts: state.alert\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import React, { Fragment } from 'react';\r\n\r\nexport default () => (\r\n  <Fragment>\r\n    <h1>Loading...</h1>\r\n  </Fragment>\r\n);\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { addLike, removeLike, deletePost } from '../../actions/post';\r\n\r\nconst PostItem = ({\r\n  addLike,\r\n  removeLike,\r\n  deletePost,\r\n  auth,\r\n  post: { _id, text, name, likes, date },\r\n  showActions\r\n}) => {\r\n  return (\r\n    <div class=\"post bg-white p-1 my-1\">\r\n      <div>\r\n        <p>{text}</p>\r\n        <p class=\"my-1 post-date\">\r\n          {name}\r\n          {' | '}\r\n          Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment>\r\n        </p>\r\n\r\n        {showActions && (\r\n          <Fragment>\r\n            <button\r\n              onClick={e => addLike(_id)}\r\n              type=\"button\"\r\n              class=\"btn btn-light\"\r\n            >\r\n              <i class=\"fas fa-thumbs-up\"></i>{' '}\r\n              {likes > 0 && <span>{likes}</span>}\r\n            </button>\r\n            <button\r\n              onClick={e => removeLike(_id)}\r\n              type=\"button\"\r\n              class=\"btn btn-light\"\r\n            >\r\n              <i class=\"fas fa-thumbs-down\"></i>\r\n            </button>\r\n            {!auth.loading && auth.isAuthenticated && (\r\n              <button\r\n                onClick={e => deletePost(_id)}\r\n                type=\"button\"\r\n                class=\"btn btn-danger\"\r\n              >\r\n                <i class=\"fas fa-times\"></i>\r\n              </button>\r\n            )}\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nPostItem.defaultProps = {\r\n  showActions: true\r\n};\r\n\r\nPostItem.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  addLike: PropTypes.func.isRequired,\r\n  removeLike: PropTypes.func.isRequired,\r\n  deletePost: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(\r\n  PostItem\r\n);\r\n","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  ADD_POST\r\n} from './types';\r\n\r\n// Get posts\r\nexport const getPosts = () => async dispatch => {\r\n  try {\r\n    const res = await axios.get('/api/posts');\r\n\r\n    dispatch({\r\n      type: GET_POSTS,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: error.response.data.msg, status: error.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Add like\r\nexport const addLike = postId => async dispatch => {\r\n  try {\r\n    const res = await axios.put(`/api/posts/like/${postId}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { postId, likes: res.data }\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: {\r\n        msg: error.response.data.msg,\r\n        status: error.response.status\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\n// remove like\r\nexport const removeLike = postId => async dispatch => {\r\n  try {\r\n    const res = await axios.put(`/api/posts/unlike/${postId}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { postId, likes: res.data }\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: error.response.data.msg, status: error.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// add post\r\nexport const addPost = (text, name) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({ text, name });\r\n\r\n  try {\r\n    const res = await axios.post('/api/posts/', body, config);\r\n\r\n    dispatch({\r\n      type: ADD_POST,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert('Post Created', 'success'));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: error.response.data.msg, status: error.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// delete post\r\nexport const deletePost = postId => async dispatch => {\r\n  try {\r\n    await axios.delete(`/api/posts/${postId}`);\r\n\r\n    dispatch({\r\n      type: DELETE_POST,\r\n      payload: postId\r\n    });\r\n\r\n    dispatch(setAlert('Post Removed', 'success'));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: error.response.data.msg, status: error.response.status }\r\n    });\r\n  }\r\n};\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addPost } from '../../actions/post';\r\n\r\nconst PostForm = ({ addPost }) => {\r\n  const [postData, setText] = useState({\r\n    text: '',\r\n    name: ''\r\n  });\r\n\r\n  const { text, name } = postData;\r\n\r\n  return (\r\n    <div class=\"post-form\">\r\n      <form\r\n        class=\"form my-1\"\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          addPost(text, name);\r\n          setText({ text: '', name: '' });\r\n        }}\r\n      >\r\n        <textarea\r\n          name=\"text\"\r\n          cols=\"30\"\r\n          rows=\"5\"\r\n          placeholder=\"What are some things you are thankful for today?\"\r\n          value={text}\r\n          onChange={e =>\r\n            setText({ ...postData, [e.target.name]: e.target.value })\r\n          }\r\n          required\r\n        ></textarea>\r\n        <textarea\r\n          name=\"name\"\r\n          cols=\"30\"\r\n          rows=\"1\"\r\n          placeholder=\"Optional Name\"\r\n          value={name}\r\n          onChange={e =>\r\n            setText({ ...postData, [e.target.name]: e.target.value })\r\n          }\r\n        ></textarea>\r\n        <input type=\"submit\" class=\"btn btn-dark my-1\" value=\"Submit\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nPostForm.propTypes = {\r\n  addPost: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { addPost })(PostForm);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport PostItem from './PostItem';\r\nimport PostForm from './PostForm';\r\nimport { getPosts } from '../../actions/post';\r\n\r\nconst Posts = ({ getPosts, wall: { posts, loading } }) => {\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, [getPosts]);\r\n  return loading ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Posts</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-hand-peace\"></i> Welcome!\r\n      </p>\r\n      <PostForm />\r\n      <div className=\"posts\">\r\n        {posts.map(post => (\r\n          <PostItem key={post._id} post={post}></PostItem>\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPosts.propTypes = {\r\n  getPosts: PropTypes.func.isRequired,\r\n  wall: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  wall: state.wall\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPosts })(Posts);\r\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\nconst intialState = [];\r\nexport default function(state = intialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, action.payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter(alert => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  ACCOUNT_DELETED\r\n} from '../actions/types';\r\n\r\nconst intialState = {\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null\r\n};\r\n\r\nexport default function(state = intialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: payload\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem('token', payload.token);\r\n      return { ...state, ...payload, isAuthenticated: true, loading: false };\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n    case ACCOUNT_DELETED:\r\n      localStorage.removeItem('token');\r\n      return { ...state, token: null, isAuthenticated: false, loading: false };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  ADD_POST\r\n} from '../actions/types';\r\nconst intialState = {\r\n  posts: [],\r\n  loading: true,\r\n  error: {}\r\n};\r\n\r\nexport default function(state = intialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: payload,\r\n        loading: false\r\n      };\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        posts: [payload, ...state.posts],\r\n        loading: false\r\n      };\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter(post => post._id !== payload),\r\n        loading: false\r\n      };\r\n    case POST_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false\r\n      };\r\n    case UPDATE_LIKES:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map(post => {\r\n          return post._id === payload.postId\r\n            ? {\r\n                ...post,\r\n                likes: payload.likes\r\n              }\r\n            : post;\r\n        }),\r\n        loading: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport alert from './alert';\r\nimport auth from './auth';\r\nimport wall from './wall';\r\n\r\nexport default combineReducers({\r\n  alert,\r\n  auth,\r\n  wall\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n// import index.js reducer file\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  applyMiddleware(...middleware)\r\n);\r\n\r\nexport default store;\r\n","import React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Login from './components/auth/Login';\nimport Alert from './components/layout/Alert';\nimport Wall from './components/posts/Wall';\n\n//Redux\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\nimport './App.css';\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Navbar />\n          <section className=\"container\">\n            <Alert />\n            <Switch>\n              <Route exact path=\"/\" component={Wall} />\n              <Route exact path=\"/login\" component={Login} />\n              {/* <PrivateRoute exact path=\"/posts\" component={Posts} /> */}\n            </Switch>\n          </section>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}