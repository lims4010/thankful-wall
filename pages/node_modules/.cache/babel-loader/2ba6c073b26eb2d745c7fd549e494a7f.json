{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\lims4\\\\Documents\\\\thankful-wall\\\\client\\\\pages\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\lims4\\\\Documents\\\\thankful-wall\\\\client\\\\pages\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\lims4\\\\Documents\\\\thankful-wall\\\\client\\\\pages\\\\src\\\\components\\\\auth\\\\Register.js\";\nimport React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { setAlert } from '../../actions/alert';\nimport PropTypes from 'prop-types'; // import axios from 'axios';\n\nconst Register = ({\n  setAlert\n}) => {\n  const _useState = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1];\n\n  const name = formData.name,\n        email = formData.email,\n        password = formData.password,\n        password2 = formData.password2;\n\n  const onChange = e => setFormData(_objectSpread({}, formData, {\n    [e.target.name]: e.target.value\n  }));\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (password !== password2) {\n      setAlert('Passwords do not match', 'danger');\n    } else {\n      console.log('Success'); //   const newUser = {\n      //     name,\n      //     email,\n      //     password\n      //   };\n      //   try {\n      //     const config = {\n      //       headers: {\n      //         'Content-Type': 'application/json'\n      //       }\n      //     };\n      //     const body = JSON.stringify(newUser);\n      //     const res = await axios.post('/api/users', body, config);\n      //     console.log(res.data);\n      //   } catch (error) {\n      //     console.error(error.response.data);\n      //   }\n    }\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Sign Up\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), \" Create Your Account\"), React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: e => onSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Name\",\n    name: \"name\",\n    value: name,\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"Email Address\",\n    name: \"email\",\n    value: email,\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(\"small\", {\n    className: \"form-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"This site uses Gravatar so if you want a profile image, use a Gravatar email\")), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    minLength: \"6\",\n    value: password,\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    name: \"password2\",\n    minLength: \"6\",\n    value: password2,\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    value: \"Register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    className: \"my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Already have an account? \", React.createElement(Link, {\n    to: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Sign In\")));\n};\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  setAlert\n})(Register);","map":{"version":3,"sources":["C:/Users/lims4/Documents/thankful-wall/client/pages/src/components/auth/Register.js"],"names":["React","Fragment","useState","connect","Link","setAlert","PropTypes","Register","name","email","password","password2","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","console","log","propTypes","func","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAkB;AAAA,oBACDH,QAAQ,CAAC;AACvCM,IAAAA,IAAI,EAAE,EADiC;AAEvCC,IAAAA,KAAK,EAAE,EAFgC;AAGvCC,IAAAA,QAAQ,EAAE,EAH6B;AAIvCC,IAAAA,SAAS,EAAE;AAJ4B,GAAD,CADP;AAAA;AAAA,QAC1BC,QAD0B;AAAA,QAChBC,WADgB;;AAAA,QAQzBL,IARyB,GAQYI,QARZ,CAQzBJ,IARyB;AAAA,QAQnBC,KARmB,GAQYG,QARZ,CAQnBH,KARmB;AAAA,QAQZC,QARY,GAQYE,QARZ,CAQZF,QARY;AAAA,QAQFC,SARE,GAQYC,QARZ,CAQFD,SARE;;AASjC,QAAMG,QAAQ,GAAGC,CAAC,IAChBF,WAAW,mBAAMD,QAAN;AAAgB,KAACG,CAAC,CAACC,MAAF,CAASR,IAAV,GAAiBO,CAAC,CAACC,MAAF,CAASC;AAA1C,KADb;;AAGA,QAAMC,QAAQ,GAAG,MAAMH,CAAN,IAAW;AAC1BA,IAAAA,CAAC,CAACI,cAAF;;AACA,QAAIT,QAAQ,KAAKC,SAAjB,EAA4B;AAC1BN,MAAAA,QAAQ,CAAC,wBAAD,EAA2B,QAA3B,CAAR;AACD,KAFD,MAEO;AACLe,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EADK,CAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACF,GAxBD;;AAyBA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,yBAFF,EAKE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,QAAQ,EAAEN,CAAC,IAAIG,QAAQ,CAACH,CAAD,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,MAFd;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,KAAK,EAAEP,IAJT;AAKE,IAAA,QAAQ,EAAEO,CAAC,IAAID,QAAQ,CAACC,CAAD,CALzB;AAME,IAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAWE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,WAAW,EAAC,eAFd;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,KAAK,EAAEN,KAJT;AAKE,IAAA,QAAQ,EAAEM,CAAC,IAAID,QAAQ,CAACC,CAAD,CALzB;AAME,IAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE;AAAO,IAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oFATF,CAXF,EAyBE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,SAAS,EAAC,GAJZ;AAKE,IAAA,KAAK,EAAEL,QALT;AAME,IAAA,QAAQ,EAAEK,CAAC,IAAID,QAAQ,CAACC,CAAD,CANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAzBF,EAmCE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,WAAW,EAAC,kBAFd;AAGE,IAAA,IAAI,EAAC,WAHP;AAIE,IAAA,SAAS,EAAC,GAJZ;AAKE,IAAA,KAAK,EAAEJ,SALT;AAME,IAAA,QAAQ,EAAEI,CAAC,IAAID,QAAQ,CAACC,CAAD,CANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAnCF,EA6CE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,SAAS,EAAC,iBAA/B;AAAiD,IAAA,KAAK,EAAC,UAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7CF,CALF,EAoDE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAC2B,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAD3B,CApDF,CADF;AA0DD,CA/FD;;AAiGAR,QAAQ,CAACe,SAAT,GAAqB;AACnBjB,EAAAA,QAAQ,EAAEC,SAAS,CAACiB,IAAV,CAAeC;AADN,CAArB;AAGA,eAAerB,OAAO,CAAC,IAAD,EAAO;AAAEE,EAAAA;AAAF,CAAP,CAAP,CAA4BE,QAA5B,CAAf","sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { setAlert } from '../../actions/alert';\r\nimport PropTypes from 'prop-types';\r\n\r\n// import axios from 'axios';\r\n\r\nconst Register = ({ setAlert }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    password2: ''\r\n  });\r\n\r\n  const { name, email, password, password2 } = formData;\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    if (password !== password2) {\r\n      setAlert('Passwords do not match', 'danger');\r\n    } else {\r\n      console.log('Success');\r\n      //   const newUser = {\r\n      //     name,\r\n      //     email,\r\n      //     password\r\n      //   };\r\n      //   try {\r\n      //     const config = {\r\n      //       headers: {\r\n      //         'Content-Type': 'application/json'\r\n      //       }\r\n      //     };\r\n      //     const body = JSON.stringify(newUser);\r\n      //     const res = await axios.post('/api/users', body, config);\r\n      //     console.log(res.data);\r\n      //   } catch (error) {\r\n      //     console.error(error.response.data);\r\n      //   }\r\n    }\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Sign Up</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i> Create Your Account\r\n      </p>\r\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Name\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email Address\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n          <small className=\"form-text\">\r\n            This site uses Gravatar so if you want a profile image, use a\r\n            Gravatar email\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            minLength=\"6\"\r\n            value={password}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            name=\"password2\"\r\n            minLength=\"6\"\r\n            value={password2}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\r\n      </form>\r\n      <p className=\"my-1\">\r\n        Already have an account? <Link to=\"/login\">Sign In</Link>\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nRegister.propTypes = {\r\n  setAlert: PropTypes.func.isRequired\r\n};\r\nexport default connect(null, { setAlert })(Register);\r\n"]},"metadata":{},"sourceType":"module"}